.TH "Player" 3 "Tue Jan 10 2023" "Version 1" "Zuldesi" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Player
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPlayer\fP (WINDOW *win, int y, int x)"
.br
.ti -1c
.RI "int \fBgetmv\fP ()"
.br
.ti -1c
.RI "void \fBjump\fP ()"
.br
.ti -1c
.RI "int \fBairshoot\fP ()"
.br
.ti -1c
.RI "void \fBgodown\fP ()"
.br
.ti -1c
.RI "void \fBgoup\fP ()"
.br
.ti -1c
.RI "void \fBdisplay\fP ()"
.br
.ti -1c
.RI "void \fBinitialize\fP ()"
.br
.ti -1c
.RI "void \fBinjury\fP ()"
.br
.ti -1c
.RI "int \fBgetx\fP ()"
.br
.ti -1c
.RI "int \fBgety\fP ()"
.br
.ti -1c
.RI "int \fBgetCoins\fP ()"
.br
.ti -1c
.RI "int \fBgetDir\fP ()"
.br
.ti -1c
.RI "int \fBgetPoints\fP ()"
.br
.ti -1c
.RI "int \fBgetLife\fP ()"
.br
.ti -1c
.RI "bool \fBgetBuy\fP ()"
.br
.ti -1c
.RI "void \fBsetBuy\fP (bool val)"
.br
.ti -1c
.RI "void \fBSetJump\fP ()"
.br
.ti -1c
.RI "void \fBupdatePoints\fP (int \fBpoints\fP)"
.br
.ti -1c
.RI "void \fBupdateCash\fP (int \fBmoney\fP)"
.br
.ti -1c
.RI "void \fBupdateCoordinates\fP (int x, int y)"
.br
.ti -1c
.RI "void \fBsetDir\fP (int \fBdir\fP)"
.br
.ti -1c
.RI "\fBBullet\fP \fBgetBullet\fP ()"
.br
.ti -1c
.RI "\fBbullt\fP \fBsetBullet\fP (\fBbullt\fP tmp, int cod)"
.br
.ti -1c
.RI "\fBBullet\fP \fBgetExploBullet\fP ()"
.br
.ti -1c
.RI "\fBbullt\fP \fBsetExploBullet\fP (\fBbullt\fP tmp, int cod)"
.br
.ti -1c
.RI "\fBbullt\fP \fBshoot\fP (\fBbullt\fP tmp)"
.br
.ti -1c
.RI "\fBbullt\fP \fBexplo_shoot\fP (\fBbullt\fP tmp)"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetGun\fP ()"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetShield\fP ()"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetHP\fP ()"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetArmor\fP ()"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetTeleportation\fP ()"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetBullets\fP ()"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetJumping\fP ()"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetFly\fP ()"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgetExplo_Bullets\fP ()"
.br
.ti -1c
.RI "void \fBsetGun\fP (string g)"
.br
.ti -1c
.RI "void \fBsetShield\fP (int s)"
.br
.ti -1c
.RI "void \fBsetHP\fP (int h)"
.br
.ti -1c
.RI "void \fBsetArmor\fP (int a)"
.br
.ti -1c
.RI "void \fBsetTeleportation\fP (int t)"
.br
.ti -1c
.RI "void \fBsetBullets\fP (int b)"
.br
.ti -1c
.RI "void \fBsetJumping\fP (int j)"
.br
.ti -1c
.RI "void \fBsetFly\fP (int f)"
.br
.ti -1c
.RI "void \fBsetExplo_Bullets\fP (int e)"
.br
.ti -1c
.RI "bool \fBgetActiveFly\fP ()"
.br
.ti -1c
.RI "void \fBsetActiveFly\fP (bool val)"
.br
.ti -1c
.RI "bool \fBgetActiveJump\fP ()"
.br
.ti -1c
.RI "int \fBgetTELEPORT_DISTANCE\fP (int i)"
.br
.ti -1c
.RI "int \fBgetFlyActiveDuration\fP ()"
.br
.ti -1c
.RI "void \fBsetFlyActiveDuration\fP (int val)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "char \fBcharacter\fP [4] {}"
.br
.ti -1c
.RI "WINDOW * \fBcurwin\fP {}"
.br
.ti -1c
.RI "int \fBlife\fP {}"
.br
.ti -1c
.RI "int \fBcash\fP {}"
.br
.ti -1c
.RI "int \fBxLoc\fP {}"
.br
.ti -1c
.RI "int \fByLoc\fP {}"
.br
.ti -1c
.RI "int \fBxMax\fP {}"
.br
.ti -1c
.RI "int \fByMax\fP {}"
.br
.ti -1c
.RI "int \fBdir\fP {}"
.br
.ti -1c
.RI "int \fBpoints\fP {}"
.br
.ti -1c
.RI "int \fBjump_height\fP {}"
.br
.ti -1c
.RI "bool \fBactivejump\fP {}"
.br
.ti -1c
.RI "int \fBconta\fP {}"
.br
.ti -1c
.RI "int \fBsegno\fP {}"
.br
.ti -1c
.RI "bool \fBbuy\fP {}"
.br
.ti -1c
.RI "\fBPowerup\fP \fBgun\fP"
.br
.ti -1c
.RI "\fBPowerup\fP \fBshield\fP"
.br
.ti -1c
.RI "\fBPowerup\fP \fBhp\fP"
.br
.ti -1c
.RI "\fBPowerup\fP \fBarmor\fP"
.br
.ti -1c
.RI "\fBPowerup\fP \fBteleportation\fP"
.br
.ti -1c
.RI "\fBPowerup\fP \fBbullets\fP"
.br
.ti -1c
.RI "\fBPowerup\fP \fBjumping\fP"
.br
.ti -1c
.RI "\fBPowerup\fP \fBfly\fP"
.br
.ti -1c
.RI "\fBPowerup\fP \fBexplo_bullets\fP"
.br
.ti -1c
.RI "int \fBARMOR_DURATION\fP [3] {}"
.br
.ti -1c
.RI "int \fBTELEPORT_DISTANCE\fP [3] {}"
.br
.ti -1c
.RI "bool \fBACTIVE_ARMOR\fP {}"
.br
.ti -1c
.RI "int \fBARMOR_ACTIVE_DURATION\fP {}"
.br
.ti -1c
.RI "int \fBNUM_BULLETS\fP {}"
.br
.ti -1c
.RI "int \fBNUM_EXPLO_BULLETS\fP {}"
.br
.ti -1c
.RI "int \fBFLY_DURATION\fP {}"
.br
.ti -1c
.RI "int \fBFLY_ACTIVE_DURATION\fP {}"
.br
.ti -1c
.RI "bool \fBACTIVE_FLY\fP {}"
.br
.ti -1c
.RI "\fBBullet\fP \fBbullet\fP"
.br
.ti -1c
.RI "\fBBullet\fP \fBexplo_bullet\fP"
.br
.ti -1c
.RI "int \fBind\fP {}"
.br
.ti -1c
.RI "int \fBind2\fP {}"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "int Player::airshoot ()"
Shoot during the jump movement or the down movement\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "void Player::display ()"
See the player\&. 
.SS "\fBbullt\fP Player::explo_shoot (\fBbullt\fP tmp)"

.PP
\fBParameters\fP
.RS 4
\fItmp\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "bool Player::getActiveFly ()"
Take active fly variable\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "bool Player::getActiveJump ()"
Take active jump variable\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "\fBPowerup\fP Player::getArmor ()"

.PP
\fBReturns\fP
.RS 4
Armor\&. 
.RE
.PP

.SS "\fBBullet\fP Player::getBullet ()"
bullets\&. 
.PP
\fBReturns\fP
.RS 4
bullets\&. 
.RE
.PP

.SS "\fBPowerup\fP Player::getBullets ()"

.PP
\fBReturns\fP
.RS 4
Bullets\&. 
.RE
.PP

.SS "bool Player::getBuy ()"
Take buy variable\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "int Player::getCoins ()"

.PP
\fBReturns\fP
.RS 4
coins of player\&. 
.RE
.PP

.SS "int Player::getDir ()"

.PP
\fBReturns\fP
.RS 4
dir of player\&. 
.RE
.PP

.SS "\fBPowerup\fP Player::getExplo_Bullets ()"

.PP
\fBReturns\fP
.RS 4
explosive bullets\&. 
.RE
.PP

.SS "\fBBullet\fP Player::getExploBullet ()"

.PP
\fBReturns\fP
.RS 4
explosive bullets\&. 
.RE
.PP

.SS "\fBPowerup\fP Player::getFly ()"

.PP
\fBReturns\fP
.RS 4
Fly\&. 
.RE
.PP

.SS "int Player::getFlyActiveDuration ()"
Take fly duration\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "\fBPowerup\fP Player::getGun ()"
Get power-ups\&. 
.PP
\fBReturns\fP
.RS 4
Gun\&. 
.RE
.PP

.SS "\fBPowerup\fP Player::getHP ()"

.PP
\fBReturns\fP
.RS 4
HP\&. 
.RE
.PP

.SS "\fBPowerup\fP Player::getJumping ()"

.PP
\fBReturns\fP
.RS 4
Jump\&. 
.RE
.PP

.SS "int Player::getLife ()"
Life of player\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "int Player::getmv ()"
Movement\&. 
.SS "int Player::getPoints ()"
Points of the player\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "\fBPowerup\fP Player::getShield ()"

.PP
\fBReturns\fP
.RS 4
Shield\&. 
.RE
.PP

.SS "int Player::getTELEPORT_DISTANCE (int i)"
take the input parameter of the vector TELEPORT_DISTANCE 
.PP
\fBParameters\fP
.RS 4
\fIi\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "\fBPowerup\fP Player::getTeleportation ()"

.PP
\fBReturns\fP
.RS 4
Teleport\&. 
.RE
.PP

.SS "int Player::getx ()"
X coordinate of the player\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "int Player::gety ()"
y coordinate of the player\&. 
.PP
\fBReturns\fP
.RS 4

.RE
.PP

.SS "void Player::godown ()"
Fall\&. 
.SS "void Player::goup ()"
Go up\&. 
.SS "void Player::initialize ()"
Start the player\&. 
.SS "void Player::injury ()"
Damage\&. 
.SS "void Player::jump ()"
Jump\&. 
.SS "void Player::setActiveFly (bool val)"
Set active fly variable\&. 
.PP
\fBParameters\fP
.RS 4
\fIval\fP 
.RE
.PP

.SS "void Player::setArmor (int a)"
Set armor\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP 
.RE
.PP

.SS "\fBbullt\fP Player::setBullet (\fBbullt\fP tmp, int cod)"
Set bullets\&. 
.PP
\fBParameters\fP
.RS 4
\fItmp\fP 
.br
\fIcod\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "void Player::setBullets (int b)"
Set bullets\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP 
.RE
.PP

.SS "void Player::setBuy (bool val)"
Set buy variable\&. 
.PP
\fBParameters\fP
.RS 4
\fIval\fP 
.RE
.PP

.SS "void Player::setDir (int dir)"
Change direction\&. 
.PP
\fBParameters\fP
.RS 4
\fIdir\fP 
.RE
.PP

.SS "void Player::setExplo_Bullets (int e)"
Set explosive bullets\&. 
.PP
\fBParameters\fP
.RS 4
\fIe\fP 
.RE
.PP

.SS "\fBbullt\fP Player::setExploBullet (\fBbullt\fP tmp, int cod)"

.PP
\fBParameters\fP
.RS 4
\fItmp\fP 
.br
\fIcod\fP 
.RE
.PP
\fBReturns\fP
.RS 4
.RE
.PP

.SS "void Player::setFly (int f)"
Set fly\&. 
.PP
\fBParameters\fP
.RS 4
\fIf\fP 
.RE
.PP

.SS "void Player::setFlyActiveDuration (int val)"
Set fly duration\&. 
.PP
\fBParameters\fP
.RS 4
\fIval\fP 
.RE
.PP

.SS "void Player::setGun (string g)"
Set power-ups\&. Set Gun\&. 
.PP
\fBParameters\fP
.RS 4
\fIg\fP 
.RE
.PP

.SS "void Player::setHP (int h)"
Set HP\&. 
.PP
\fBParameters\fP
.RS 4
\fIh\fP 
.RE
.PP

.SS "void Player::SetJump ()"
Reset jump variable\&. 
.SS "void Player::setJumping (int j)"
Set jump\&. 
.PP
\fBParameters\fP
.RS 4
\fIj\fP 
.RE
.PP

.SS "void Player::setShield (int s)"
Set Shield\&. 
.PP
\fBParameters\fP
.RS 4
\fIs\fP 
.RE
.PP

.SS "void Player::setTeleportation (int t)"
Set teleport\&. 
.PP
\fBParameters\fP
.RS 4
\fIt\fP 
.RE
.PP

.SS "void Player::updateCash (int money)"
Update your wallet\&. 
.PP
\fBParameters\fP
.RS 4
\fImoney\fP 
.RE
.PP

.SS "void Player::updateCoordinates (int x, int y)"
Update your x and y when you went in a not-possible place\&. 
.PP
\fBParameters\fP
.RS 4
\fIx\fP 
.br
\fIy\fP 
.RE
.PP

.SS "void Player::updatePoints (int points)"
When you kill one enemy you take points\&. 
.PP
\fBParameters\fP
.RS 4
\fIpoints\fP 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "bool Player::ACTIVE_ARMOR {}\fC [protected]\fP"
Check if armor is activated\&. 
.SS "bool Player::ACTIVE_FLY {}\fC [protected]\fP"
Check if fly power-up is activated\&. 
.SS "bool Player::activejump {}\fC [protected]\fP"
If it is true, you are jumping\&. 
.SS "\fBPowerup\fP Player::armor\fC [protected]\fP"
Armor Power-up\&. 
.SS "int Player::ARMOR_ACTIVE_DURATION {}\fC [protected]\fP"
Armor time duration\&. 
.SS "int Player::ARMOR_DURATION[3] {}\fC [protected]\fP"
Constant for power-ups\&. Duration of the armor\&. 
.SS "\fBBullet\fP Player::bullet\fC [protected]\fP"
Gun magazine\&. Bullets magazine\&. 
.SS "\fBPowerup\fP Player::bullets\fC [protected]\fP"
Bullets power-up\&. 
.SS "bool Player::buy {}\fC [protected]\fP"
If you want to buy something\&. 
.SS "int Player::cash {}\fC [protected]\fP"
Money\&. 
.SS "char Player::character[4] {}\fC [protected]\fP"
\fBPlayer\fP's icon\&. 
.SS "int Player::dir {}\fC [protected]\fP"
Save the direction of the movement\&. 
.SS "\fBBullet\fP Player::explo_bullet\fC [protected]\fP"
Explosive bullets magazine\&. 
.SS "\fBPowerup\fP Player::explo_bullets\fC [protected]\fP"
Explosive bullets power-up\&. 
.SS "\fBPowerup\fP Player::fly\fC [protected]\fP"
Fly power-up\&. 
.SS "int Player::FLY_ACTIVE_DURATION {}\fC [protected]\fP"
Fly time duration remains\&. 
.SS "int Player::FLY_DURATION {}\fC [protected]\fP"
Flight duration\&. 
.SS "\fBPowerup\fP Player::gun\fC [protected]\fP"
Power-ups\&. Gun type power-up\&. 
.SS "\fBPowerup\fP Player::hp\fC [protected]\fP"
HP Power-up\&. 
.SS "int Player::ind {}\fC [protected]\fP"
Bullets list index\&. 
.SS "int Player::ind2 {}\fC [protected]\fP"
Explosive bullets list index\&. 
.SS "\fBPowerup\fP Player::jumping\fC [protected]\fP"
Jump power-up\&. 
.SS "int Player::life {}\fC [protected]\fP"
Lifepoints\&. 
.SS "int Player::NUM_BULLETS {}\fC [protected]\fP"
Quantity of bullets\&. 
.SS "int Player::NUM_EXPLO_BULLETS {}\fC [protected]\fP"
Explosive bullets\&. 
.SS "int Player::points {}\fC [protected]\fP"
Points of the player\&. 
.SS "\fBPowerup\fP Player::shield\fC [protected]\fP"
Shield power-up\&. 
.SS "int Player::TELEPORT_DISTANCE[3] {}\fC [protected]\fP"
Teleport distance\&. 
.SS "\fBPowerup\fP Player::teleportation\fC [protected]\fP"
Teleport power-up\&. 
.SS "int Player::xLoc {}\fC [protected]\fP"
\fBPlayer\fP coordinates position\&. 
.SS "int Player::xMax {}\fC [protected]\fP"
Coordinates of the box\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Zuldesi from the source code\&.
